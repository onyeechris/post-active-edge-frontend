name: Frontend CI-CD

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set_output.outputs.image_tag }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Run SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: SonarQube Quality Gate
      uses: sonarsource/sonarqube-quality-gate-action@master
      timeout-minutes: 2
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 14.x

    - name: Install dependencies
      run: npm install

    - name: Build the application
      run: npm run build --if-present

    - name: Build Docker Image
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: onyeechris/post-frontend
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        tags: main-${{ github.sha }}

    - name: Set output image tag
      id: set_output
      run: echo "::set-output name=image_tag::main-${{ github.sha }}"

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install kubectl
      uses: azure/setup-kubectl@v2
      with:
        version: "v1.24.0"

    # - name: Configure AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v4
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-1

    # - name: Update kube_config
    #   run: aws eks update-kubeconfig --name demony-cluster --region us-east-1

    # - name: Set IMAGE_TAG environment variable
    #   run: echo "IMAGE_TAG=main-${{ github.sha }}" >> $GITHUB_ENV

    # - name: Replace image tag in deployment file
    #   run: sed -i 's|onyeechris/post-frontend:latest|onyeechris/post-frontend:${{ env.IMAGE_TAG }}|' frontend.yml

    # - name: Deploy apps
    #   run: kubectl apply -f frontend.yml
